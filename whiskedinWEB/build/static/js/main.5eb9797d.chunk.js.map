{"version":3,"sources":["img/whiskedinlogo.png","serviceWorker.js","index.js","App.js","UserAuth/UserAuth.js","Home/Home.js","HomePage/HomePage.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","API_URL","process","REACT_APP_API_ENDPOINT","ReactDOM","render","react_default","a","createElement","BrowserRouter","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_Users_Javdav_WebstormProjects_untitled_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_Javdav_WebstormProjects_untitled_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_Javdav_WebstormProjects_untitled_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","title","react__WEBPACK_IMPORTED_MODULE_5___default","className","react_router__WEBPACK_IMPORTED_MODULE_7__","exact","path","component","UserAuth","Home","HomePage","Component","handleUsernameChange","event","setState","username","target","value","handlePasswordChange","password","handleEmailChange","email","handleLoginSubmit","preventDefault","data","FormData","append","state","axios","post","headers","Content-Type","res","localStorage","setItem","JSON","stringify","history","push","catch","err","style","visibility","innerText","handleSignUpSubmit","console","log","toggle","bind","_Users_Javdav_WebstormProjects_untitled_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","activeTab","error","tab","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","src","whisk","alt","reactstrap__WEBPACK_IMPORTED_MODULE_8__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","classnames","active","onClick","id","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","tabId","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","sm","reactstrap__WEBPACK_IMPORTED_MODULE_15__","onSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","for","reactstrap__WEBPACK_IMPORTED_MODULE_18__","type","name","placeholder","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_19__","Card","Deck","deck","Id","Name","Brand","handleNext","handleBack","length","React"],"mappings":"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","file":"static/js/main.5eb9797d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiskedinlogo.0788f601.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst API_URL = process.env.REACT_APP_API_ENDPOINT || \"http://whiskedin.herokuapp.com\";\n\nexport default API_URL;\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Route} from \"react-router\";\nimport UserAuth from './UserAuth/UserAuth';\nimport Home from './Home/Home';\nimport HomePage from './HomePage/HomePage';\n\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        process.title = 'Bops';\n    }\n\n    render() {\n    return (\n        <div className=\"App\">\n          <Route exact path=\"/\" component={UserAuth}/>\n          <Route exact path=\"/home\" component={Home}/>\n          <Route exact path=\"/homepage\" component={HomePage}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport './UserAuth.css';\nimport {\n    Button,\n    Col,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    TabContent,\n    TabPane\n} from \"reactstrap\";\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport whisk from '../img/whiskedinlogo.png';\n\nimport API_URL from '../index'\n\nexport default class UserAuth extends Component {\n\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            username: '',\n            email: '',\n            password: '',\n            error: ''\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    handleUsernameChange = event => {\n        this.setState({username: event.target.value});\n    };\n\n    handlePasswordChange = event => {\n        this.setState({password: event.target.value});\n    };\n\n    handleEmailChange = event => {\n        this.setState({email: event.target.value});\n    };\n\n    handleLoginSubmit = event => {\n        event.preventDefault();\n\n        // Creating form to be sent to API\n        const data = new FormData();\n        data.append('username', this.state.username);\n        data.append('password', this.state.password);\n\n        // Contacting API to validate user password\n        axios.post(API_URL + `/login`, data, {\n            headers: {'Content-Type': 'application/json',}\n        })\n            .then(res => {\n                if (res.data[\"access_token\"]) {\n                    localStorage.setItem('user', JSON.stringify(res.data[\"access_token\"]));\n                    this.props.history.push(\"/homepage\")\n                }\n\n            }).catch( res => {\n                const err = document.getElementById('id_er');\n                err.style.visibility = \"visible\";\n                err.innerText = \"Invalid username or password\";\n                // show error\n            })\n    };\n\n    handleSignUpSubmit = event => {\n        event.preventDefault();\n\n        // Creating form to be sent to API\n        const data = new FormData();\n        data.append('username', this.state.username);\n        data.append('password', this.state.password);\n\n        // Contacting api to add new user\n        axios.post(API_URL + `/register`, data, {\n            headers: {'Content-Type': 'application/json',}\n        })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                localStorage.setItem('user', JSON.stringify(res.data['access_token']));\n                this.props.history.push('/home');\n            }).catch( res => {\n                const err = document.getElementById('id_existing_user');\n                err.style.visibility = \"visible\";\n                err.innerText = \"Username already exists\";\n                // show error\n        })\n    };\n\n\n    render() {\n        return (\n            <div className=\"UserAuth-logo\">\n                <img src={whisk} className=\"UserAuth-logo\" alt=\"\"/>\n                <div className=\"UserAuth-tabs\">\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({active: this.state.activeTab === '1'})}\n                                onClick={() => {\n                                    this.toggle('1');\n                                }} id='id_sign_in'\n                            >\n                                Login\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({active: this.state.activeTab === '2'})}\n                                onClick={() => {\n                                    this.toggle('2');\n                                }} id={'id_sign_up'}\n                            >\n                                Sign-Up\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                            <Row>\n                                <Col sm=\"12\">\n                                    <div className=\"bork-logo\">\n                                        <div className=\"UserAuth\">\n                                            <p className=\"error\" id=\"id_invalid_user\"></p>\n                                            <Form onSubmit={this.handleLoginSubmit} className=\"login\">\n                                                <FormGroup>\n                                                    <Label for=\"username\">Username</Label>\n                                                    <Input\n                                                        type=\"username\"\n                                                        name=\"username\"\n                                                        id=\"UserAuth-username_login\"\n                                                        placeholder=\"Enter username\"\n                                                        onChange={this.handleUsernameChange}\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Label for=\"examplePassword\">Password</Label>\n                                                    <Input\n                                                        type=\"password\"\n                                                        name=\"password\"\n                                                        id=\"UserAuth-password_login\"\n                                                        placeholder=\"Enter password\"\n                                                        onChange={this.handlePasswordChange}\n                                                    />\n                                                </FormGroup>\n                                                <Button id=\"id_signin_button\">Login</Button>\n                                            </Form>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <Row>\n                                <Col sm=\"12\">\n                                    <div className=\"bork-logo\">\n                                        <div className=\"UserAuth\">\n                                            <p className=\"error\" id=\"id_existing_user\"></p>\n                                            <Form onSubmit={this.handleSignUpSubmit} className=\"sign-up\">\n                                                <FormGroup>\n                                                    <Label for=\"username\">Username</Label>\n                                                    <Input\n                                                        type=\"username\"\n                                                        name=\"username\"\n                                                        id=\"UserAuth-username_sign_up\"\n                                                        placeholder=\"Enter username\"\n                                                        onChange={this.handleUsernameChange}\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Label for=\"examplePassword\">Password</Label>\n                                                    <Input\n                                                        type=\"password\"\n                                                        name=\"password\"\n                                                        id=\"UserAuth-password_sign_up\"\n                                                        placeholder=\"Enter password\"\n                                                        onChange={this.handlePasswordChange}\n                                                    />\n                                                </FormGroup>\n                                                <Button id='id_sign_up_button'>Sign-Up</Button>\n                                            </Form>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                    </TabContent>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n","import React, {Component} from 'react';\n\nexport default class UserAuth extends Component {\n\n}","import React from 'react';\nimport './HomePage.css';\nimport whisk from '../img/whiskedinlogo.png';\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Deck: props.deck,\n            Id: props.deck[0].Id,\n            Name: props.deck[0].Name,\n            Brand: props.deck[0].Brand\n        };\n\n        this.handleNext = this.handleNext.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n    }\n\n    handleNext() {\n        const id = this.state.Id + 1;\n        const deck = this.state.Deck;\n        if(id < deck.length && id >= 0){\n            this.setState(state => ({\n                Id: deck[id].Id,\n                Name: deck[id].Name,\n                Brand: deck[id].Brand\n            }));\n        }\n    }\n\n      handleBack() {\n        const id = this.state.Id - 1;\n        const deck = this.state.Deck;\n        if(id >= 0){\n            this.setState(state => ({\n                Id: deck[id].Id,\n                Name: deck[id].Name,\n                Brand: deck[id].Brand\n            }));\n        }\n    }\n\n    render(){\n        return (\n            <div id='id_whisk_card'>\n                <table> \n                    <thead>\n                        <tr>\n                            <th id='id_name'>{this.state.Name}</th>\n                            <th id='id_brand'>{this.state.Brand}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <button id='id_back_button' className='button' onClick={this.handleBack}>\n                                    {'Back'}\n                                </button>\n                                <img id='id_image' src={whisk} className='Card-Img' alt=''>\n                                </img>\n                                <button id=\"id_next_button\" className='button' onClick={this.handleNext}>\n                                    {'Next'}\n                                </button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <button id='id_share_button' className='button'>\n                                    {'Share'}\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>        \n        )\n    }\n}\n\nexport default class HomePage extends React.Component {\n    state = {\n        deck: [\n            {\n                Id: 0,\n                Name: 'White Walker',\n                Brand: 'Jhonny Walker 1',\n            },\n            {\n                Id: 1,\n                Name: 'Red Label',\n                Brand: 'Jhonnie Walker 2'\n            },\n            {\n                Id: 2,\n                Name: 'Blue Label',\n                Brand: 'Jhonnie Walker 3'\n            }\n        ]\n    };\n\n    render() {\n        const deck= this.state.deck;\n\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>WhiskedIn</th>\n                            <td>\n                                <button id='id_logout_button' className='button'>\n                                    {'Log Out'}\n                                </button>\n                            </td>\n                        </tr>\n                    </thead>\n                </table>\n                <Card deck={deck}/>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}